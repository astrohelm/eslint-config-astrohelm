'use strict';

module.exports = {
  // Best practice
  eqeqeq: ['error', 'always'],
  'no-loop-func': ['error'],
  'no-self-compare': ['error'],
  'no-unmodified-loop-condition': ['error'],
  'no-useless-concat': ['error'],
  curly: ['error', 'multi-line'],
  'no-redeclare': ['off'],
  'consistent-return': ['error', { treatUndefinedAsUnspecified: true }],
  'handle-callback-err': ['error', '^err'],
  'no-console': ['off'],
  'no-constant-condition': ['error', { checkLoops: false }],
  'no-return-assign': ['off'],
  'no-shadow-restricted-names': ['error'],
  'no-use-before-define': ['error', { functions: false }],
  strict: ['error', 'global'],
  // ES6
  'arrow-body-style': ['error', 'as-needed'],
  'arrow-parens': ['error', 'as-needed'],
  'arrow-spacing': ['error'],
  'no-useless-computed-key': ['error'],
  'no-useless-rename': ['error'],
  'object-shorthand': ['error', 'always'],
  'prefer-arrow-callback': ['error'],
  'prefer-const': ['error'],
  'prefer-numeric-literals': ['error'],
  'prefer-rest-params': ['error'],
  'prefer-spread': ['error'],
  'rest-spread-spacing': ['error', 'never'],
  'template-curly-spacing': ['error', 'never'],
  // ES13
  'no-unused-private-class-members': ['error'],
  'no-invalid-this': ['error'],
  'class-methods-use-this': ['warn'],
  // Style
  'block-spacing': ['error', 'always'],
  'brace-style': ['error', '1tbs', { allowSingleLine: true }],
  camelcase: ['error'],
  'comma-dangle': ['error', 'always-multiline'],
  'comma-spacing': ['error', { before: false, after: true }],
  'comma-style': ['error', 'last'],
  'eol-last': ['error'],
  'func-call-spacing': ['error', 'never'],
  'key-spacing': ['error', { beforeColon: false, afterColon: true, mode: 'minimum' }],
  'keyword-spacing': [
    'error',
    { before: true, after: true, overrides: { function: { after: false } } },
  ],
  'linebreak-style': ['error', 'unix'],
  'max-nested-callbacks': ['error', { max: 5 }],
  'new-cap': ['error', { newIsCap: true, capIsNew: true, properties: true }],
  'new-parens': ['error'],
  'no-lonely-if': ['error'],
  'no-empty': ['error', { allowEmptyCatch: true }],
  'no-trailing-spaces': ['error'],
  'no-unneeded-ternary': ['error'],
  'no-whitespace-before-property': ['error'],
  'object-curly-spacing': ['error', 'always'],
  'operator-assignment': ['error', 'always'],
  'operator-linebreak': ['error', 'after', { overrides: { '?': 'before', ':': 'before' } }],
  quotes: ['error', 'single', { allowTemplateLiterals: true }],
  semi: ['error', 'always'],
  'semi-spacing': ['error', { before: false, after: true }],
  'space-before-blocks': ['error', 'always'],
  'space-before-function-paren': [
    'error',
    { anonymous: 'always', named: 'never', asyncArrow: 'always' },
  ],
  'space-in-parens': ['error', 'never'],
  'space-infix-ops': ['error'],
  'space-unary-ops': ['error', { words: true, nonwords: false, overrides: { typeof: false } }],
  'no-extra-parens': ['off'],
  indent: [
    'error',
    2,
    { SwitchCase: 1, VariableDeclarator: { var: 2, let: 2, const: 3 }, MemberExpression: 1 },
  ],
  'max-len': [
    'error',
    {
      code: 100,
      ignoreUrls: true,
      ignoreRegExpLiterals: true,
      ignoreTrailingComments: true,
      ignoreComments: true,
    },
  ],
};
